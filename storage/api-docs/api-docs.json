{
    "openapi": "3.0.0",
    "info": {
        "title": "BP Challenge",
        "description": "BP Challenge Swagger OpenApi description",
        "contact": {
            "email": "gbrayhan@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/account": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Get list of persons",
                "description": "Returns list of persons",
                "operationId": "getProjectsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login User",
                "description": "User Login",
                "operationId": "login",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "email",
                                        "type": "string",
                                        "example": "gbrayhan@gmail.com"
                                    },
                                    "password": {
                                        "description": "password",
                                        "type": "string",
                                        "example": "Golang77"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "hdXRoXC9sb2dpbiIs.ImlhdCI6MTYzNDQ0NTg2NCwiZXhwIjoxNjM0NDQ5NDY0LCJu.wa"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": "3600"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register User",
                "description": "Register Login",
                "operationId": "register",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "name",
                                        "type": "string",
                                        "example": "Alex"
                                    },
                                    "email": {
                                        "description": "email",
                                        "type": "string",
                                        "example": "gbrayhan@gmail.com"
                                    },
                                    "password": {
                                        "description": "password",
                                        "type": "string",
                                        "example": "Golang77"
                                    },
                                    "password_confirmation": {
                                        "description": "password_confirmation",
                                        "type": "string",
                                        "example": "Golang77"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully registered"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/auth/user-profile": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Profile User",
                "description": "User Information",
                "operationId": "userProfile",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "readOnly": "true",
                                            "example": "1"
                                        },
                                        "email": {
                                            "description": "User unique email address",
                                            "type": "string",
                                            "format": "email",
                                            "readOnly": "true",
                                            "example": "user@gmail.com"
                                        },
                                        "name": {
                                            "type": "string",
                                            "maxLength": 32,
                                            "example": "John Doe"
                                        },
                                        "created_at": {
                                            "description": "Datetime marker of verification status",
                                            "type": "string",
                                            "format": "date-time",
                                            "readOnly": "true",
                                            "example": "2019-02-25 12:59:20"
                                        },
                                        "updated_at": {
                                            "description": "Datetime marker of verification status",
                                            "type": "string",
                                            "format": "date-time",
                                            "readOnly": "true",
                                            "example": "2019-02-25 12:59:20"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/person": {
            "get": {
                "tags": [
                    "Person"
                ],
                "summary": "Get list of persons",
                "description": "Returns list of persons",
                "operationId": "getProjectsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Person"
                ],
                "summary": "Register Person",
                "description": "Register Person",
                "operationId": "storePerson",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "name",
                                        "type": "string",
                                        "example": "Alex"
                                    },
                                    "last_name": {
                                        "description": "last name",
                                        "type": "string",
                                        "example": "Guerrero"
                                    },
                                    "phone": {
                                        "description": "phone",
                                        "type": "string",
                                        "example": "+554422331122"
                                    },
                                    "curp": {
                                        "description": "CURP",
                                        "type": "string",
                                        "example": "GGAA887777HDFBRR01"
                                    },
                                    "address": {
                                        "description": "Address",
                                        "type": "string",
                                        "example": "Av Elementia, Zapopan Jalisco, Mexico"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Person created successfully"
                                        },
                                        "person": {
                                            "$ref": "#/components/schemas/Person"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/person/associate-person": {
            "post": {
                "tags": [
                    "Person"
                ],
                "summary": "Associate Person to the current user",
                "description": "ssociate Person to the current user",
                "operationId": "associatePerson",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "person_id": {
                                        "description": "Person Identifier",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Person successfully associated"
                                        },
                                        "person": {
                                            "$ref": "#/components/schemas/Person"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "required": [
                    "account_number",
                    "person_id",
                    "product",
                    "balance"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "account_number": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "00919222G122"
                    },
                    "person_id": {
                        "type": "integer",
                        "readOnly": "false",
                        "example": "2211"
                    },
                    "product": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "BBVA CC"
                    },
                    "balance": {
                        "type": "decimal",
                        "maxLength": 32,
                        "example": "12.5"
                    },
                    "created_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    },
                    "updated_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    },
                    "deleted_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Account"
                }
            },
            "Person": {
                "required": [
                    "name",
                    "last_name",
                    "phone",
                    "curp",
                    "address"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "Doe"
                    },
                    "phone": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "+52 5544332211"
                    },
                    "curp": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "GGSS923211HDFBRR01"
                    },
                    "address": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Av Elementia 12, Arcos de Vallarta, Guadalajara, Jalisco, Mexico"
                    },
                    "created_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    },
                    "updated_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    },
                    "deleted_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Person"
                }
            },
            "Transaction": {
                "required": [
                    "source_account",
                    "destinatio_account",
                    "operation_type",
                    "amount",
                    "concept",
                    "reference"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "source_account": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "234421A123342"
                    },
                    "destinatio_account": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "234421A123342"
                    },
                    "user_id": {
                        "type": "integer",
                        "readOnly": "false",
                        "example": "1"
                    },
                    "operation_type": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "abono"
                    },
                    "amount": {
                        "type": "decimal",
                        "maxLength": 32,
                        "example": "120.9"
                    },
                    "concept": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "Pago de servicio"
                    },
                    "reference": {
                        "type": "string",
                        "maxLength": 100,
                        "example": "KJ1231234A"
                    },
                    "transaction_date": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "false",
                        "example": "2019-02-25 12:59:20"
                    },
                    "status": {
                        "description": "Status of the transaction",
                        "type": "string",
                        "readOnly": "false",
                        "example": "pending"
                    },
                    "created_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    },
                    "updated_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    },
                    "deleted_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Transaction"
                }
            },
            "User": {
                "required": [
                    "email",
                    "name",
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "role": {
                        "description": "User role",
                        "type": "string",
                        "readOnly": "true",
                        "example": "admin"
                    },
                    "email": {
                        "description": "User unique email address",
                        "type": "string",
                        "format": "email",
                        "readOnly": "true",
                        "example": "user@gmail.com"
                    },
                    "email_verified_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "John Doe"
                    },
                    "created_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    },
                    "updated_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    },
                    "deleted_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "example": "2019-02-25 12:59:20"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer [TOKEN])",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        []
    ]
}